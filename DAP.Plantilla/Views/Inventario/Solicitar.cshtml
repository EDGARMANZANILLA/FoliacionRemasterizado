@model List<DAP.Plantilla.Models.SolicitudFormasPagoModel>
@{
    ViewBag.Icono = "fas fa-boxes";
    ViewBag.Title = "Solicitar";

}



<seccion class="card col-12 offset-md-2 col-md-7" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">


    <div class="margenSection row" style="margin-bottom: 60px; ">


        <div class="btn-block">
        </div>


        <div class="col-12 col-md-6  btn-block">
            <button id="NuevaSolicitud" type="button" class="btn btn-primary btn-lg  btn-block" >Crear Nueva Solicitud</button>

        </div>

        <div class="col-12 col-md-6  btn-block">
            <button id="Historico" type="button" class="btn btn-primary btn-lg  btn-block">Historico de Solicitudes</button>

        </div>

    </div>

</seccion>




<!-- Seccion para llenar los campos de la solicitud de uno o mas bancos  -->
<section id="AgregarBancosASolicitud" class="card margenSection col-12 offset-md-2 col-md-7" style="display:none">

    <br />
    <h5 class="col-12 text-center text-uppercase">Llene los siguientes campos para realizar la solicitud de formas de pago</h5>
    <br />

    <form>
        <!--Seleccionar banco-->
        <div class="row">

            <div class=" col-12 text-center offset-md-1 col-md-3 text-md-right">
                <label class="text-capitalize">  Banco:</label>
            </div>

            <div class=" col-12 col-md-6">
                <div class="form-group">
                    <select class="form-control" id="SeleccionBanco" name="SeleccionBanco" required>
                        <option value="" disabled selected>Selecciona un banco...</option>
                        @foreach (var banco in ViewBag.ListaNombreBancos)
                        {


                            <option>@banco  </option>


                        }

                    </select>
                </div>
            </div>



        </div>

        <!-- Muestra el numero de la cuenta filtrado por el banco seleccionado-->
        <div class="row">
            <label class=" col-12 text-center offset-md-1 col-md-3 text-md-right ">Cuenta:</label>
            <span id="NumeroDeCuenta" class=" offset-1 col-10 text-center offset-md-0 col-md-6  border border-primary rounded-pill h4" title="Numero de cuenta activa"></span>

        </div>

        <!--Input para la cantidad de formas que desea solicitar el usuario-->
        <div class="row">
            <label class=" col-12 text-center offset-md-1 col-md-3 text-md-right">Cantidad:</label>
            <input id="CantidadFormas" class="offset-1 col-10 offset-md-0 col-md-6" placeholder="Ingrese C. de formas a solicitar" type="number" pattern=" 0+\.[0-9]*[1-9][0-9]*$" name="itemConsumption" onkeypress="return event.charCode >= 48 && event.charCode <= 57 " />

        </div>
        <br />

        <!--- Input para el folio inicial -->
        <div class="row ">
            <label class="col-12 text-center offset-md-0 col-md-4 text-md-right">A partir del folio:</label>
            <input id="FInicial" class="offset-1 col-10 offset-md-0 col-md-6" placeholder="Ingrese inicio del folio a solicitar" type="text" pattern="[A-Za-z0-9]" onkeypress="return event.charCode >= 48 && event.charCode <= 122 && event.charCode != 91 " />
        </div>

        <br />
        <a id="AgregarBancoSolicitud" class="col-12 text-center offset-md-3 col-md-6 btn btn-outline-success">
            Agregar Banco a la solicitud
        </a>

    </form>


    <br />

</section>




<!-- Genera la tabla para que se puedan editar los datos que se van agregando antes de poderlos agregar al historico -->

<div class="margenSection">
    <div class="table-responsive">

        <div id="divTablaCrud">
            <table id="tablaAgregados" class="table table-striped table-bordered table-hover" style="display:none;">
                <caption id="TituloDeCaption"></caption>
                <thead>
                    <tr class="text-center text-uppercase">
                        <th>Id</th>
                        <th>Banco</th>
                        <th>cuenta</th>
                        <th>Folio Inicial</th>
                        <th>Cantidad</th>
                        <th></th>



                    </tr>
                </thead>


            </table>

        </div>

    </div>




</div>

<br />
<br />
<button type="button" id="CrearSolicitud" class="btn btn-primary col-10 offset-1" style="display:none" >Crear nueva solicitud</button>
































<!-- Generacion de tabla del Historico de las solicitudes de formas de pago  -->
<section>

    <div class="table-responsive">
        <div id="TablaHistorica">
            <table id="tbHistoricoSolicitudesCreadas" class="table table-striped table-bordered table-hover" style="display:none">
                <caption class="text-uppercase">Solicitudes creadas recientemente</caption>


                <thead class="tabla">
                    <tr>
                        <th>Numero Memo</th>
                        <th>Fecha Solicitud</th>
                        <th>

                        </th>




                    </tr>
                </thead>

                <tfoot>
                <th class="Filtro">No. Memo</th>
                <th class="Filtro">Fecha</th>

                </tfoot>

            </table>

        </div>


</section>











<!-- INICIO DE MODALES -->
<!-- Modal de Edicion -->
<section class="modal fade" id="EditarSolicitud" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">


                <h5 class="col-11 text-center">Editar banco seleccionado</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>


            </div>



            <div class="modal-body">

                <div class="row">
                    <label class=" col-12 text-center offset-md-1 col-md-3 text-md-right ">Id:</label>
                    <label id="IdEdicion" class=" offset-1 col-10 text-center offset-md-0 col-md-6 h5" title="Id de solicutud a modificar"></label>

                </div>


                <!--Seleccionar banco-->
                <div class="row">

                    <div class=" col-12 text-center offset-md-1 col-md-3 text-md-right">
                        <label class="text-capitalize">  Banco:</label>
                    </div>

                    <div class=" col-12 col-md-6">
                        <div class="form-group">
                            <select class="form-control" id="EditarSeleccionNombreBanco" name="EditSeleccionBanco" required>
                                <option value="" selected>Selecciona un banco...</option>
                                @foreach (var banco in ViewBag.ListaNombreBancos)
                                {


                                    <option value="@banco">@banco  </option>


                                }

                            </select>
                        </div>
                    </div>



                </div>

                <!-- Muestra el numero de la cuenta filtrado por el banco seleccionado-->
                <div class="row">
                    <label class=" col-12 text-center offset-md-1 col-md-3 text-md-right ">Cuenta:</label>
                    <label id="EditarNumeroDeCuenta" class=" offset-1 col-10 text-center offset-md-0 col-md-6  border border-primary rounded-pill h4" title="Numero de cuenta activa"></label>

                </div>

                <!--Input para la cantidad de formas que desea solicitar el usuario-->
                <div class="row">
                    <label class=" col-12 text-center offset-md-1 col-md-3 text-md-right">Cantidad:</label>
                    <input id="EditarCantidadFormas" class="offset-1 col-10 offset-md-0 col-md-6" placeholder="Ingrese C. de formas a solicitar" type="number" pattern=" 0+\.[0-9]*[1-9][0-9]*$" name="itemConsumption" onkeypress="" required />
                </div>
                <br />

                <!--- Input para el folio inicial -->
                <div class="row ">
                    <label class="col-12 text-center offset-md-0 col-md-4 text-md-right">A partir del folio:</label>
                    <input id="EditarFInicial" class="offset-1 col-10 offset-md-0 col-md-6" placeholder="Ingrese inicio del folio a solicitar" type="text" pattern="[A-Za-z0-9]" onkeypress="" required />
                </div>



                <br />

            </div>


            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                <button id="GuardarEdicion" type="button" class="btn btn-success">Guardar Edicion</button>

            </div>


        </div>
    </div>
</section>


<!-- Modal para descarga -->
<section class="modal fade" id="Descargar" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">


                <h5 class="col-11 text-center text-uppercase">Solitud creada correctamente</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>


            </div>



            <div class="modal-body text-center">
                <a class="btn btn-success btn-lg text-center" id="DlReport" href="@Url.Action("GenerarReporteSolicitud", "Inventario", new {NumMemorandum = "0"})">Descargar solicitud creada</a>

            </div>


            <div class="modal-footer text-center">

            </div>


        </div>
    </div>
</section>


<!-- Modal para mostrar los detalles de la solicitud por el memorandum -->
<section class="modal fade " id="DetalleSolicitud" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content ">
            <div class="modal-header">


                <h5 class="col-11 text-center text-uppercase">Detalles</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>


            </div>



            <div class="modal-body text-center">

                <section>

                    <div class="table-responsive">
                        <div id="TablaDetalleSolicitud">
                            <table id="tbDetalleSolicitud" class="table table-striped table-bordered table-hover">
                                <caption class="text-uppercase">Detalle de la Solicitud</caption>


                                <thead class="tabla">
                                    <tr>
                                        <th>Numero de Solicitud</th>
                                        <th>Banco</th>
                                        <th>Cuenta</th>
                                        <th>Folio Inicial</th>
                                       

                                    </tr>
                                </thead>

                               
                            </table>

                        </div>


                </section>

            </div>


            <div class="modal-footer text-center">

            </div>


        </div>
    </div>
</section>















<script>

    //funcionalidad de los primeros botones de crea solicitud y historico de solicitudes
 






     //El siguiente par es para el CRUD de los bancos agregados a la solicitud
    function DibujarTablaAjax() {
        $("#divTablaCrud").append(

            "<table id='tablaAgregados'  class='table table-striped display table-bordered table-hover' cellspacing='0'  style='width:100%'>" +
            " <caption class='text-uppercase'>Detalle general de formas de pago inhabilitadas </caption>"
            + "<thead class='tabla'>" +

            "<tr>" +
            "<th>Id </th>" +
            "<th>Banco </th>" +
            "<th>Cuenta</th>" +
            "<th>Cantidad</th>" +
            "<th>Folio Inicial</th>" +
            "<th></th>" +

            "</tr>" +
            "</thead>" +
            "</table>"
        );
    };
    let listar;
    function PintarConsultas(datos) {

        listar = $('#tablaAgregados').DataTable({
            "ordering": false,
            "info": false,
            "searching": false,
            "paging": true,
            "lengthMenu": [5, 10],
            "language":
            {
                "processing": "Procesando...",
                "lengthMenu": "Mostrar _MENU_ registros",
                "zeroRecords": "No se encontraron resultados",
                "emptyTable": "Ningún dato disponible en esta tabla",
                "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                "search": "Buscar:",
                "info": "Mostrando de _START_ a _END_ de _TOTAL_ entradas",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            },
            "data": datos,
            "columns": [
                { "data": "Id" },
                { "data": "nombreBanco" },
                { "data": "cuentaBanco" },
                { "data": "cantidadFormas" },
                { "data": "fInicial" },
                { "defaultContent": "<a class='editar btn btn-success' data-toggle='modal' data-target='#EditarSolicitud'  > <i class='fas fa-edit'></i></a> <a class='eliminar btn btn-danger'> <i class='fas fa-trash-alt'></i></a>" }


            ]

        });
    };

      //El siguiente par es para el historico de las solicitudes
    function DibujarTablaSolicitudesCreadasAjax() {
        $("#TablaHistorica").append(

            "<table id='tbHistoricoSolicitudesCreadas'  class='table table-striped display table-bordered table-hover' cellspacing='0'  style='width:100%'>" +
            " <caption class='text-uppercase'>Historico de solicitudes creadas </caption>"
            + "<thead class='tabla'>" +
            "<tr>" +
            "<th>Numero Memorandum</th>" +
            "<th>Fecha Solicitud</th>" +
            "<th>  </th>" +
            "</tr>" +
            "</thead>" +
            "<tfoot>" +
            "<tr>" +
            "<th class='Filtro'>No. Memo</th>" +
            "<th class='Filtro'>Fecha</th>" +
            "<th></th>" +
            "</tr>" +
            "</tfoot>" +
            "</table>"
        );
    };
    let historioSolicitudes;
    function PintarConsultaTablaSolicitud(datos) {

        historioSolicitudes = $('#tbHistoricoSolicitudesCreadas').DataTable({
            "ordering": true,
            "info": false,
            "searching": true,
            "paging": true,
            "lengthMenu": [10, 15],
            "language":
            {
                "processing": "Procesando...",
                "lengthMenu": "Mostrar _MENU_ registros",
                "zeroRecords": "No se encontraron resultados",
                "emptyTable": "Ningún dato disponible en esta tabla",
                "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                "search": "Buscar:",
                "info": "Mostrando de _START_ a _END_ de _TOTAL_ entradas",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            },
            "order": [[0, 'desc']],
            "data": datos,
            "columns": [
                { "data": "NumeroMemo" },
                { "data": "FechaSolicitud" },
                {

                    "render": function (data, type, row) {
                        let da = row.NumeroMemo;
                        return '<a  class="detalles btn btn-success" data-toggle="modal" data-target="#DetalleSolicitud">Ver detalles </a> <a class="descargar btn btn-danger" href="/Inventario/GenerarReporteSolicitud?NumMemorandum=' + da + '"> <i class="fas fa-cloud-download-alt"></i></a>';
                    }


                }

            ]

        });
    };


    //funciones para los detalles de las solicitudes filtrados por cadaMemorandum
    function DibujarTablaDetalleSolicitudAjax() {
           $("#TablaDetalleSolicitud").append(

            "<table id='tbDetalleSolicitud'  class='table table-striped display table-bordered table-hover' cellspacing='0'  style='width:100%'>" +
            " <caption class='text-uppercase'>Detalle de la Solicitud </caption>"
            + "<thead class='tabla'>" +
            "<tr>" +
            "<th>Numero Memorandum</th>" +
            "<th>Banco</th>" +
            "<th>Cuenta</th>" +
            "<th>Cantidad  </th>" +
            "<th>Folio Inicial  </th>" +
            "</tr>" +
            "</thead>" +
           
            "</table>"
        );
    };

    function PintarConsultaDetalleSolicitud(datos) {


        $('#tbDetalleSolicitud').DataTable({
            "ordering": false,
            "info": false,
            "searching": false,
            "paging": true,
            "lengthMenu": [5, 10],
            "language":
            {
                "processing": "Procesando...",
                "lengthMenu": "Mostrar _MENU_ registros",
                "zeroRecords": "No se encontraron resultados",
                "emptyTable": "Ningún dato disponible en esta tabla",
                "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                "search": "Buscar:",
                "info": "Mostrando de _START_ a _END_ de _TOTAL_ entradas",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            },
            "order": [[1, 'asc']],
            "data": datos,
            "columns": [
                { "data": "NumeroMemo" },
                { "data": "NombreBanco" },
                { "data": "NumeroCuenta" },
                { "data": "Cantidad" },
                { "data": "FolioInicial" },
            ]

        });
    };



    

    $(document).ready(function () {

        listaBancosSolicitados = new Array();
        const MenuCrearNuevaSolicitud = document.getElementById("NuevaSolicitud");
        MenuCrearNuevaSolicitud.addEventListener("click",
            function () {

              ///////
                $("#TablaHistorica").empty();
                //pintar de nuevo la tabla +

                DibujarTablaAjax();

                PintarConsultas(listaBancosSolicitados);

                let nuevaSolicitud = document.getElementById('NuevaSolicitud').classList.remove('btn-outline-primary');
                nuevaSolicitud = document.getElementById('NuevaSolicitud').classList.add('btn-primary');

                let inhabilitarContenedor = document.getElementById('Historico').classList.remove('btn-primary');
                inhabilitarContenedor = document.getElementById('Historico').classList.add('btn-outline-primary');

                //let InhabilitarFolios = document.getElementById('InhabilitarFolios').classList.remove('btn-primary');
                //InhabilitarFolios = document.getElementById('InhabilitarFolios').classList.add('btn-outline-primary');


                //document.getElementById("IFolios").style.display = "none";
                document.getElementById("AgregarBancosASolicitud").style.display = "block";
                document.getElementById("CrearSolicitud").style.display = "block";


            }
        );


       



        let bancoSeleccionado;
        let cuentaBanco;

        var seleccionBanco = document.getElementById("SeleccionBanco");
     //   console.log(seleccionBanco);
        seleccionBanco.addEventListener("change",
            function () {
                bancoSeleccionado = this.options[seleccionBanco.selectedIndex];
               // console.log(bancoSeleccionado.value);
               var DatosEnviar = "{'BancoSeleccionado': '"+bancoSeleccionado.value+"' }";
               $.ajax({
                   url: '@Url.Action("ObtenerCuentaBancaria", "Inventario")',
                   data: DatosEnviar,
                  type: "POST",
                  contentType: "application/json; charset=utf-8",
                   success: function (msg)
                   {

                       //    console.log(msg);
                           cuentaBanco = msg;
                       document.getElementById('NumeroDeCuenta').innerHTML = msg;

                   },error: function (msg) {
                       Swal.fire({
                           icon: 'error',
                           title: 'Oops...',
                           text: 'Esto no deberia pasar intentelo de nuevo por favor!',
                           footer: '<a>Si necesita ayuda pongase en contacto con el administrador</a>'
                       })
                   }
               });
            }
        );







        let cantidadFormas = null;
        let fInicial = null;
        let Id = 0;

        const agregarBancoSolicitud = document.getElementById("AgregarBancoSolicitud");
        agregarBancoSolicitud.addEventListener("click",
            function () {
                cantidadFormas = document.getElementById("CantidadFormas").value;
                fInicial = document.getElementById("FInicial").value;


                if (bancoSeleccionado != null)
                {
                    if (cantidadFormas != null && cantidadFormas != "")
                    {
                        Id += 1;
                        let nombreBanco = bancoSeleccionado.value;

                        listaBancosSolicitados.push({ Id, nombreBanco, cuentaBanco, cantidadFormas, fInicial });

                        // console.log(Id, seleccionBanco.value, cuentaBanco, cantidadFormas, fInicial);


                        $("#divTablaCrud").empty();

                        DibujarTablaAjax();

                        PintarConsultas(listaBancosSolicitados);

                        //OcultarMensajeCargando();

                       // console.log(listaBancosSolicitados);

                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Oops...',
                            text: 'Ingrese una cantidad de formas'
                        })
                    }

                } else
                {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Oops...',
                        text: 'Seleccione un banco!'
                    })
                }

            }
        );








    //Inicio CRUD
        //Click para eliminar el elemento seleccionado de la tabla
        $(document).on("click", ".eliminar", function () {



            //console.log("vieja" + listaBancosSolicitados);

            let datoAEliminar = listar.row($(this).parents("tr")).data();
            var i = listaBancosSolicitados.indexOf(datoAEliminar);
            listaBancosSolicitados.splice(i, 1);



           // console.log(listaBancosSolicitados);


            let eliminado = listar.row($(this).parents("tr")).remove().draw();
        });



        let datoAEditar;
        //Click para editar el elemento seleccionado de la tabla
        $(document).on("click", ".editar", function () {

            datoAEditar = listar.row($(this).parents("tr")).data();
            var i = listaBancosSolicitados.indexOf(datoAEditar);

           // console.log(listaBancosSolicitados[i].nombreBanco);

            let nBanco = listaBancosSolicitados[i].nombreBanco;

            document.getElementById("IdEdicion").innerHTML = listaBancosSolicitados[i].Id;
            $("#EditarSeleccionNombreBanco").val(listaBancosSolicitados[i].nombreBanco);
           //$('#EditarSeleccionNombreBanco').change();
            document.getElementById("EditarNumeroDeCuenta").innerHTML = listaBancosSolicitados[i].cuentaBanco;
            document.getElementById("EditarCantidadFormas").value = listaBancosSolicitados[i].cantidadFormas;
            document.getElementById("EditarFInicial").value = listaBancosSolicitados[i].fInicial;







            //metodo para cambiar la seleccion del banco
            let editarnombreBancoSeleccionado = null;
            let editarcuentaBanco = null;

            const editarseleccionBanco = document.getElementById("EditarSeleccionNombreBanco");
                editarseleccionBanco.addEventListener("change",
                function () {

                let bancoSeleccionadoEdit = this.options[editarseleccionBanco.selectedIndex];
                editarnombreBancoSeleccionado = bancoSeleccionadoEdit.value;


                var datoEnviar = "{'BancoSeleccionado':'" + bancoSeleccionadoEdit.value + "'}";


                    $.ajax({
                        url: '@Url.Action("ObtenerCuentaBancaria", "Inventario")',
                        data: datoEnviar,
                        type: "POST",
                        contentType: "application/json; charset=utf-8",

                        success: function (msg) {


                            //se msg es falso es porque la variable cuenta bancaria esta vacia
                            if (msg.length == 0) {
                                Swal.fire({
                                    backdrop: true,

                                    allowEnterKey: false,
                                    icon: 'error',
                                    title: 'Problema al obtener la cuenta del banco seleccionado',
                                    text: 'No se pudo cargar el numero de la cuenta intentelo mas tarde o pongase en contacto con el administrador del sistema',

                                })

                            } else {

                                document.getElementById('EditarNumeroDeCuenta').innerHTML = msg;

                            }




                        }, error: function (msg) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Esto no deberia pasar intentelo de nuevo por favor!',
                                footer: '<a>Si necesita ayuda pongase en contacto con el administrador</a>'
                            })
                        }
                    });


                });













            //obtner datos dela edicion del banco
            const GuardarEdicion = document.getElementById("GuardarEdicion");
            GuardarEdicion.addEventListener("click",
                function () {
                    //se muestra el mensaje cargando para bloquear la pantalla
                    MensajeCargando();
                   /// Editar(datoAEditar.Id);


                    let indice = listaBancosSolicitados.findIndex(y => y.Id == datoAEditar.Id);
                    console.log("asdf");
                    console.log(indice);

                    //Obtiene los datos modificados del modal
                    let bancoSeleccionadoEdicion = document.getElementById("EditarSeleccionNombreBanco").value;
                    let cuentaEdicion = document.getElementById("EditarNumeroDeCuenta").innerText;
                    let cantidadFormasEdicion = document.getElementById('EditarCantidadFormas').value;
                    let folioInicialEdicion = document.getElementById('EditarFInicial').value;

                    //se actualizan los varlores dentro del arreglo
                    listaBancosSolicitados[indice].nombreBanco = bancoSeleccionadoEdicion;
                    listaBancosSolicitados[indice].cuentaBanco = cuentaEdicion;
                    listaBancosSolicitados[indice].cantidadFormas = cantidadFormasEdicion;
                    listaBancosSolicitados[indice].fInicial = folioInicialEdicion;


                    //se vacia la tabla
                    $("#divTablaCrud").empty();

                    DibujarTablaAjax();

                    PintarConsultas(listaBancosSolicitados);

                    OcultarMensajeCargando();

                    $('#EditarSolicitud').modal('hide');

                  //  console.log(listaBancosSolicitados);
                }
            );


        });







        ///verificar metodo hasta despues de asegurar que el pdf este correcto


        //click en "Crear Nueva solicitud" para enviar los datos de la solicitud
        const CrearSolicitudBanco = document.getElementById("CrearSolicitud");
        CrearSolicitudBanco.addEventListener("click", function () {

           // console.log("dff");


            if (listaBancosSolicitados.length > 0) {
                MensajeCargando();
                $.ajax({
                    url: '@Url.Action("CrearNuevaSolicitud", "Inventario")',
                    data: JSON.stringify(listaBancosSolicitados),
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (msg) {
                        OcultarMensajeCargando();
                        //console.log("msg", msg);
                        if (msg == true) {
                            $('#Descargar').modal('show');

                        } else {
                            Swal.fire({
                                backdrop: true,
                                allowEnterKey: false,
                                allowOutsideClick: false,
                                icon: 'error',
                                title: 'No se pudo crear la solicitud; Intente de nuevo!',

                            })
                        }



                    },
                    error: function (msg) {

                        OcultarMensajeCargando();
                        Swal.fire({
                            backdrop: true,
                            allowEnterKey: false,
                            allowOutsideClick: false,
                            icon: 'error',
                            title: 'Ocurrio un problema intente de nuevo',

                        })
                    }
                });



            } else
            {

                Swal.fire({
                    backdrop: true,
                    allowEnterKey: false,
                    allowOutsideClick: false,
                    icon: 'warning',
                    title: 'Agregue un banco a la solicitud',

                })
            }







        });






        //Metodos para mostrar el historico de las solicitudes creadas
        const historico = document.getElementById("Historico");
        historico.addEventListener("click", function () {

            $("#divTablaCrud").empty();
            let nuevaSolicitud = document.getElementById('Historico').classList.remove('btn-outline-primary');
            nuevaSolicitud = document.getElementById('Historico').classList.add('btn-primary');

            let inhabilitarContenedor = document.getElementById('NuevaSolicitud').classList.remove('btn-primary');
            inhabilitarContenedor = document.getElementById('NuevaSolicitud').classList.add('btn-outline-primary');

            document.getElementById("AgregarBancosASolicitud").style.display = "none";
            document.getElementById("CrearSolicitud").style.display = "none";


                MensajeCargando();
                $.ajax({
                    url: '@Url.Action("ObtenerHistoricoSolicitudes", "Inventario")',
                    data: JSON.stringify(listaBancosSolicitados),
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (resultado) {
                        OcultarMensajeCargando();

                        $("#TablaHistorica").empty();

                        DibujarTablaSolicitudesCreadasAjax();
                        PintarConsultaTablaSolicitud(resultado);


                    },
                    error: function (msg) {

                        OcultarMensajeCargando();
                        Swal.fire({
                            backdrop: true,
                            allowEnterKey: false,
                            allowOutsideClick: false,
                            icon: 'error',
                            title: 'Ocurrio un problema intente de nuevo',

                        })
                    }
                });


        });






        $(document).on("click", ".detalles", function () {

            let datosFilaSeleccionada = historioSolicitudes.row($(this).parents("tr")).data();

            console.log(datosFilaSeleccionada);

            MensajeCargando();


            let EnviarNumeroMemo = "{'NumeroMemo':'"+datosFilaSeleccionada.NumeroMemo+"'}";
                $.ajax({
                    url: '@Url.Action("ObtenerSolicitudPorMemo", "Inventario")',
                    data: EnviarNumeroMemo,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (resultado) {
                        OcultarMensajeCargando();
                        console.log(resultado);
                  

                        $("#TablaDetalleSolicitud").empty();

                        DibujarTablaDetalleSolicitudAjax();

                        ////cambia
                        PintarConsultaDetalleSolicitud(resultado);



                    },
                    error: function (msg) {

                        OcultarMensajeCargando();
                        Swal.fire({
                            backdrop: true,
                            allowEnterKey: false,
                            allowOutsideClick: false,
                            icon: 'error',
                            title: 'Ocurrio un problema intente de nuevo',

                        })
                    }
                });






            //DibujarTablaSolicitudesCreadasAjax();
           // PintarConsultaTablaSolicitud(resultado);

            //console.log("vieja" + listaBancosSolicitados);

            //let datoAEliminar = listar.row($(this).parents("tr")).data();
            //var i = listaBancosSolicitados.indexOf(datoAEliminar);
            //listaBancosSolicitados.splice(i, 1);



            //// console.log(listaBancosSolicitados);


            //let eliminado = listar.row($(this).parents("tr")).remove().draw();
        });





    });











</script>































